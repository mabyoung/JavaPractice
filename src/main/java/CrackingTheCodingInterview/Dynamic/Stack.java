package CrackingTheCodingInterview.Dynamic;

/**
 * 叠罗汉是一个著名的游戏，游戏中一个人要站在另一个人的肩膀上。同时我们应该让下面的人比上面的人更高一点。
 * 已知参加游戏的每个人的身高，请编写代码计算通过选择参与游戏的人，我们最多能叠多少个人。
 * 注意这里的人都是先后到的，意味着参加游戏的人的先后顺序与原序列中的顺序应该一致。
 * 给定一个int数组men，代表依次来的每个人的身高。同时给定总人数n，请返回最多能叠的人数。保证n小于等于500。
 */
public class Stack {
    public int getHeight(int[] men, int n) {
        int result = 1;
        int[] maxNum = new int[n];
        maxNum[0] = 1;
        for (int i = 1; i < n; i++) {
            maxNum[i] = 1;
            for (int j = 0; j < i; j++) {
                if (men[i] > men[j] && maxNum[j] + 1 > maxNum[i]) {
                    maxNum[i] = maxNum[j] + 1;
                    result = Math.max(maxNum[i], result);
                }
            }
        }
        return result;
    }

    public static void main(String[] args) {
        Stack stack = new Stack();
        System.out.println(stack.getHeight(new int[]{740491, 996084, 521239, 516037, 546365, 630762, 2825269, 1350739, 1696668, 2688235, 1592383, 2845367, 942129, 2312410, 981745, 2736960, 944837, 1848085, 2937387, 1913245, 2172589, 2535089, 1327845, 2980975, 2095231, 1000859, 1087782, 2321145, 779249, 176212, 1495167, 1833894, 2461920, 2504770, 1892303, 817802, 1757407, 1998965, 2404184, 715, 949302, 970738, 2789139, 1757048, 536882, 1820711, 823964, 1598428, 884259, 1750716, 2810439, 2556047, 2791043, 595792, 874528, 2873374, 879771, 2017613, 2654913, 1050987, 316928, 1100197, 74124, 2667405, 2461793, 935972, 235543, 717461, 791456, 2557130, 148260, 1290929, 1708222, 889491, 461897, 511635, 1668692, 651241, 182991, 722295, 1038170, 1123664, 2658880, 107598, 1852454, 728793, 800302, 931975, 853508, 429004, 2925092, 1750218, 922119, 1451936, 1513517, 1758454, 1592862, 2996003, 777483, 1995068, 2229726, 619897, 1205774, 974169, 1293043, 600870, 2092208, 260776, 1258220, 394555, 2010930, 2558360, 2828875, 2489373, 1649282, 2247501, 178186, 1219654, 2695714, 2177316, 2182957, 98169, 2246901, 3020548, 2793516, 1157390, 265583, 2105917, 1581447, 2146841, 1238631, 805914, 1672301, 830616, 2936643, 2300081, 2602468, 1974703, 2217646, 878319, 272380, 1242659, 1033757, 2497844, 2795378, 1001831, 2033023, 2834211, 2399824, 1504145, 1836028, 2751476, 1464296, 1013557, 2656824, 2884419, 1407922, 1874584, 2892853, 2992938, 1077163, 426295}, 162));
    }
}
